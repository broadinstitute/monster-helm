---
{{- $saName := printf "%s-account" .Release.Name }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $saName }}
{{- if .Values.rbac.create }}
{{- $pspName := printf "%s-pod-running-policy" .Release.Name }}
{{- $pspRoleName := printf "%s-psp-role" .Release.Name }}
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ $pspName }}
spec:
  privileged: false
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
    - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $pspRoleName }}
rules:
  - apiGroups: ['policy']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames: ['{{ $pspName }}']
  - apiGroups: ['']
    resources: ['configmaps']
    verbs:
      - get
      - watch
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ $pspRoleName }}-binding
subjects:
  - kind: ServiceAccount
    name: {{ $saName }}
roleRef:
  kind: Role
  name: {{ $pspRoleName }}
  apiGroup: rbac.authorization.k8s.io
{{- end }}
